version: "3.8"
services:
  backend-api:
    container_name: backend-api
    hostname: backend-api
    image: backend-api:latest
    build:
      context: ../.
      dockerfile: src/GlobalCoders.PSP.BackendApi/docker/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+"
      DbSettings__ConnectionString: ${w_connection_string}
    ports:
      - "9001:80"
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      global_coders_backend_network:
        ipv4_address: 174.30.0.101

  postgres-db:
    container_name: postgres_db_backend
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${w_postgres_user}
      - POSTGRES_PASSWORD=${w_postgres_password}
    ports:
      - "5432:5432"
    volumes:
      - global-coders-db-psql-data:/var/lib/postgresql/data
    networks:
      global_coders_backend_network:
        ipv4_address: 174.30.0.100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  global_coders_backend_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 174.30.0.0/24

volumes:
  global-coders-db-psql-data:
    name: pg_sql_api_volume_001
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${w_file_storage_base}
